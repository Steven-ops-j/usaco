include: ../../usaco.def
page: family_bronze, basic_frame
    module: cpp
    namespace: std

    $call @init

    $(set:N=12)
    $my int N, i_A, i_B
    &call open_In
        $my char A[$(N)], char B[$(N)]
        fscanf(In, "%d %s %s", &N, A, B)
        i_A = get_id(A)
        i_B = get_id(B)
    
        $for i=0:N
            fscanf(In, "%s %s", A, B)
            i_a = get_id(A)
            i_b = get_id(B)
            parent_list[i_b] = i_a

    n_A = get_level(i_A)
    n_B = get_level(i_B)

    $if n_A<=n_B
        s_rel = get_rel(i_A, i_B, n_B-n_A)
    $else
        s_rel = get_rel(i_B, i_A, n_A-n_B)

    $dump s_rel
    &call open_Out
        $print "%s", s_rel

subcode: init
    $global char names[200][11], int n_names=0
    $global int parent_list[200]
    $for i=0:200
        parent_list[i] = i

fncode: get_id(char* name): int
    $for i=0:n_names
        $if strcmp(names[i], name)==0
            return i
    int i=n_names
    strcpy(names[i], name)
    n_names++
    return i

fncode: get_level(i)
    n = 0
    $while parent_list[i] != i
        i=parent_list[i]
        n++
    return n

fncode: get_rel(i_A, i_B, n_diff)
    $global s_rel_buf[1000]
    $my char* s_A = names[i_A]
    $my char* s_B = names[i_B]
    $for i=0:n_diff
        i_B = parent_list[i_B]
    $if i_A == i_B
        $if n_diff == 1
            sprintf(s_rel_buf, "%s is the mother of %s", s_A, s_B)
        $elif n_diff == 2
            sprintf(s_rel_buf, "%s is the grand-mother of %s", s_A, s_B)
        $else
            s = s_rel_buf
            n = sprintf(s, "%s is the ", s_A)
            s += n
            $for i=0:n_diff-2
                n = sprintf(s, "great-")
                s+=n
            sprintf(s, "grand-mother of %s", s_B)
    $elif parent_list[i_A] == parent_list[i_B]
        $if n_diff == 0
            sprintf(s_rel_buf, "SIBLINGS")
        $elif n_diff == 1
            sprintf(s_rel_buf, "%s is the aunt of %s", s_A, s_B)
        $else
            s = s_rel_buf
            n = sprintf(s, "%s is the ", s_A)
            s += n
            $for i=0:n_diff-1
                n = sprintf(s, "great-")
                s+=n
            sprintf(s, "aunt of %s", s_B)
    $else
        $while parent_list[i_A]!=i_A
            i_A=parent_list[i_A]
            i_B=parent_list[i_B]
            $if i_A==i_B
                break
        $if i_A==i_B
            sprintf(s_rel_buf, "COUSINS")
        $else
            sprintf(s_rel_buf, "NOT RELATED")
    return s_rel_buf

#---------------------------------------- 
subcode: old
    # n_A < n_B
    rel += names[i_A]
    rel += " is the "
    $if n==0 && BB[1]==AA[1]
        rel = "SIBLINGS"
    $elif BB[n]==AA[0]
        $if n==1
            rel+= "mother of "
        $elif n==2
            rel+= "grand-mother of "
        $else
            $for i=0:n-2
                rel+= "great-"
            rel+= "grand-mother of "
        rel+= B
    $elif n_A>1 && BB[n+1]==AA[1]
        $if n==1
            rel+= "aunt of "
        $else
            $for i=0:n-1
                rel+= "great-"
            rel+= "aunt of "
        rel+= B
    $else
        rel="NOT RELATED"
        $for i=2:n_A
            $if BB[n+i]==AA[i]
                rel = "COUSINS"
                break

