include: ../../usaco.def

macros:
    MX: 2019201913
    MY: 2019201949
    MZ: 2019201997
    M: (int)(((long long)($1+1)*$(MX)+(long long)($2+1)*$(MY)) % $(MZ))

page: walk_gold, basic_frame
    module: cpp
    &call open_In
        $call scan_Int, N, K
    $dump N, K
    $(if:0)
        $call try1
    $(else)
        $call try2

    &call open_Out
        $print "%d", dist

subcode: try2
    int *cache = new int[N];
    int *D = new int[N];
    $for i=0:N
        cache[i] = 0
        D[i] = $(MZ)
    $for i=0:N
        i_min = 0
        $for j=0:N
            $if !cache[j] && D[i_min] > D[j]
                i_min = j
        cache[i_min] = 1

        $for j=0:N
            $if !cache[j]
                $my tn_dist
                $if i_min<j
                    tn_dist = $(M:i_min, j)
                $else
                    tn_dist = $(M:j, i_min)
                $if D[j] > tn_dist
                    D[j] = tn_dist
    $call std_Sort, D, N
    int dist = D[N-K];

subcode: try1
    $my int *pn_dist = new int[N*N]
    $for i=0:N
        $for j=0:i
            tn_a = $(M:j,i)
            pn_dist[i*N+j] = tn_a
            pn_dist[j*N+i] = tn_a
    $for i=0:N
        pn_dist[i*N+i] = -1
    # $call dump_array, pn_dist, N*N

    # since it is so regular, there can be a short-cut...
    n_merge = 0
    &call iter_i_j
        $if pn_dist[j*N+i]<0
            NOOP
        $elif n_merge == N-K
            break
        $else
            $call merge

    subcode: merge
        n_merge++ 
        pn_dist[j*N+i] = -1

        $for k=0:N
            tn_a = pn_dist[i*N+k]
            $if tn_a > pn_dist[j*N+k] 
                tn_a = pn_dist[j*N+k]
            pn_dist[i*N+k] = tn_a
            pn_dist[j*N+k] = tn_a
            pn_dist[k*N+i] = tn_a
            pn_dist[k*N+j] = tn_a

    $print "%d", pn_dist[j*N+i]
    int dist = pn_dist[j*N+i]

subcode: iter_i_j
    i=N-1
    j=i-1
    $while 1
        BLOCK
        $if i>2 && j+1<i-2
            i-=2
            j++
        $elif i>1 && j<i-1
            i-=1
        $elif j>0
            j-=1
        $else
            break
            
