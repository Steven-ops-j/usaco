include: ../../usaco.def

#- union-join

page: factory_bronze, basic_frame
    module: cpp

    &call open_In
        $call scan_Int, N
        $my int A[N], int B[N]
        $for i=0:N-1
            $call scan_int, A[i], B[i]
            A[i]--
            B[i]--

    $global int * P
    P = new int[N] # i -> P[i]
    $for i=0:N
        P[i] = i

    $for i=0:N-1
        P[A[i]] = B[i]

    $my i_root = -1 # sentinel
    $for i=0:N
        $if i_root < 0
            i_root = find_root(i)
        $else
            $if i_root == find_root(i)
                # good
            $else
                i_root=-1
                break

    $if i_root>=0
        i_root++
    &call open_Out
        fprintf(Out, "%d\n", i_root)


fncode: find_root(i)
    $while i!=P[i]
        i=P[i]
    return i

